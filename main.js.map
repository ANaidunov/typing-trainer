{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/reducers/index.ts","./src/app/store/keyboard/keyboard.actions.ts","./src/app/store/keyboard/keyboard.effects.ts","./src/app/store/keyboard/keyboard.reducer.ts","./src/app/store/keyboard/keyboard.state.ts","./src/app/store/statistics/statistics.actions.ts","./src/app/store/statistics/statistics.effects.ts","./src/app/store/statistics/statistics.reducer.ts","./src/app/store/statistics/statistics.state.ts","./src/components/keyboard-monitor/key/key.component.ts","./src/components/keyboard-monitor/key/key.component.html","./src/components/keyboard-monitor/keyboard-monitor.component.ts","./src/components/keyboard-monitor/keyboard-monitor.component.html","./src/components/results/results.component.ts","./src/components/results/results.component.html","./src/components/ticker/ticker.component.ts","./src/components/ticker/ticker.component.html","./src/components/typing-progress-bar/typing-progress-bar.component.ts","./src/components/typing-progress-bar/typing-progress-bar.component.html","./src/environments/environment.ts","./src/main.ts","./src/pipes/highlighter.pipe.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'typing-trainer';\n}\n","<app-ticker></app-ticker>\n<app-keyboard-monitor></app-keyboard-monitor>\n<app-results></app-results>\n","import { KeyboardEffects } from './store/keyboard/keyboard.effects';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TickerComponent } from '../components/ticker/ticker.component';\nimport { HighlighterPipe } from '../pipes/highlighter.pipe';\nimport { KeyboardMonitorComponent } from '../components/keyboard-monitor/keyboard-monitor.component';\nimport { KeyComponent } from '../components/keyboard-monitor/key/key.component';\nimport { StoreModule } from '@ngrx/store';\nimport { reducers, metaReducers } from './reducers';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { StatisticsEffects } from './store/statistics/statistics.effects';\nimport { TypingProgressBarComponent } from '../components/typing-progress-bar/typing-progress-bar.component';\nimport { ResultsComponent } from '../components/results/results.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TickerComponent,\n    HighlighterPipe,\n    KeyboardMonitorComponent,\n    KeyComponent,\n    TypingProgressBarComponent,\n    ResultsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatProgressBarModule,\n    MatCardModule,\n    StoreModule.forRoot(reducers, {\n      metaReducers\n    }),\n    EffectsModule.forRoot([StatisticsEffects, KeyboardEffects]),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { statisticsReducer } from './../store/statistics/statistics.reducer';\nimport { StatisticsState } from './../store/statistics/statistics.state';\nimport {\n  ActionReducerMap,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from '../../environments/environment';\nimport { keyboardReducer } from '../store/keyboard/keyboard.reducer';\nimport { KeyboardState } from '../store/keyboard/keyboard.state';\n\nexport interface State {\n  keyboard: KeyboardState;\n  statistics: StatisticsState;\n}\n\nexport const reducers: ActionReducerMap<State> = {\n  keyboard: keyboardReducer,\n  statistics: statisticsReducer,\n};\n\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [] : [];\n","import { KeyboardKey } from 'src/components/keyboard-monitor/keyboard-monitor.component';\nimport { createAction, props } from \"@ngrx/store\";\n\nexport const setKeyState = createAction('[KEYBOARD] set key state', props<{ pressedKey: KeyboardKey }>());\nexport const setTypedKeyState = createAction('[KEYBOARD] set typed key state', props<{ pressedKey: KeyboardKey }>());\n","import { setTypedKeyState, setKeyState } from 'src/app/store/keyboard/keyboard.actions';\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { delay, map } from 'rxjs/operators';\n\n@Injectable()\nexport class KeyboardEffects {\n  constructor(private actions$: Actions) {}\n\n  pushHighlightKeyButtonOn$ = createEffect(() => this.actions$.pipe(\n    ofType(setTypedKeyState),\n    map(setTypedKeyAction =>\n      setKeyState({ pressedKey: { ...setTypedKeyAction.pressedKey, isTyped: true } }),\n    ),\n  ));\n\n  pushHighlightKeyButtonOff$ = createEffect(() => this.actions$.pipe(\n    ofType(setTypedKeyState),\n    delay(200),\n    map(setTypedKeyAction =>\n      setKeyState({ pressedKey: { ...setTypedKeyAction.pressedKey, isTyped: false } }),\n    ),\n  ));\n}\n","import { createReducer, on } from \"@ngrx/store\";\nimport { KeyboardRow } from \"src/components/keyboard-monitor/keyboard-monitor.component\";\nimport { setKeyState } from \"./keyboard.actions\";\nimport { initialState, KeyboardState } from \"./keyboard.state\";\n\nexport const keyboardReducer = createReducer(initialState,\n  on(setKeyState, (state: KeyboardState, { pressedKey }) => {\n    const keyToSet = pressedKey.key === ' ' ? { ...pressedKey, key: 'Space' } : pressedKey;\n\n    let changedRow: KeyboardRow | undefined;\n    const keyRowToChangeIndex = state.keyRows.findIndex(row => {\n      const nextKeyIndex = row.findIndex(key => key.key === keyToSet.key);\n      const nextKeyOnKeyboard = row[nextKeyIndex];\n\n      if (nextKeyOnKeyboard) {\n        changedRow = [...row];\n        changedRow[nextKeyIndex] = keyToSet;\n        return true;\n      }\n\n      return false;\n    });\n\n    const newState = { ...state };\n\n    if (keyRowToChangeIndex > -1 && changedRow) {\n      const keyRows = [...state.keyRows];\n      keyRows[keyRowToChangeIndex] = changedRow;\n      newState.keyRows = keyRows;\n    }\n\n    return newState;\n  }));\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport { KeyboardKey, KeyboardRow } from \"src/components/keyboard-monitor/keyboard-monitor.component\";\n\nexport interface KeyboardState {\n  nextKeyToType?: KeyboardKey;\n  typedKey?: KeyboardKey;\n  keyRows: KeyboardRow[];\n  stringToType: string;\n}\n\nexport const initialState: KeyboardState = {\n  nextKeyToType: undefined,\n  keyRows: [\n    [\n      { key: 'q', isHighlighted: false },\n      { key: 'w', isHighlighted: false },\n      { key: 'e', isHighlighted: false },\n      { key: 'r', isHighlighted: false },\n      { key: 't', isHighlighted: false },\n      { key: 'y', isHighlighted: false },\n      { key: 'u', isHighlighted: false },\n      { key: 'i', isHighlighted: false },\n      { key: 'o', isHighlighted: false },\n      { key: 'p', isHighlighted: false },],\n    [\n      { key: 'a', isHighlighted: false },\n      { key: 's', isHighlighted: false },\n      { key: 'd', isHighlighted: false },\n      { key: 'f', isHighlighted: false },\n      { key: 'g', isHighlighted: false },\n      { key: 'h', isHighlighted: false },\n      { key: 'j', isHighlighted: false },\n      { key: 'k', isHighlighted: false },\n      { key: 'l', isHighlighted: false },],\n    [\n      { key: 'z', isHighlighted: false },\n      { key: 'x', isHighlighted: false },\n      { key: 'c', isHighlighted: false },\n      { key: 'v', isHighlighted: false },\n      { key: 'b', isHighlighted: false },\n      { key: 'n', isHighlighted: false },\n      { key: 'm', isHighlighted: false },],\n    [\n      { key: 'Space', isHighlighted: false }]\n  ],\n  stringToType: '',\n};\n\nexport const featureSelector = createFeatureSelector<KeyboardState>('keyboard');\n\nexport const keyRowsSelector = createSelector(featureSelector, state => state.keyRows);\n","import { createAction, props } from \"@ngrx/store\";\nimport { Result } from \"./statistics.state\";\n\nexport const startTimer = createAction('[STATISTICS] start timer');\nexport const stopTimer = createAction('[STATISTICS] stop timer');\nexport const setTime = createAction(`[STATISTICS] set timer's time`);\nexport const setStringLength = createAction(`STATISTICS set string to type length`, props<{ length: number }>());\nexport const resetCurrentSymbolsCount = createAction(`STATISTICS reset typed symbols count`);\nexport const incrementCurrentSymbolsCount = createAction(`STATISTICS increment typed symbols count`);\nexport const addResult = createAction(`STATISTICS add result to results array`, props<{ result: Result }>());\n\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { addResult, startTimer, stopTimer } from './statistics.actions';\nimport { distinctUntilChanged, filter, map, tap, timeInterval, withLatestFrom } from 'rxjs/operators';\nimport { wordsLengthSelector, StatisticsState } from './statistics.state';\nimport { select, Store } from '@ngrx/store';\n\n@Injectable()\nexport class StatisticsEffects {\n  constructor(private actions$: Actions, private store: Store<StatisticsState>) {}\n\n  updateTime$ = createEffect(() => this.actions$.pipe(\n    ofType(startTimer, stopTimer),\n    distinctUntilChanged(),\n    timeInterval(),\n    filter(x => x.value.type !== startTimer.type),\n    map(interval => interval.interval / 60000),\n    withLatestFrom(this.store.pipe(select(wordsLengthSelector))),\n    tap(([time, length]) => {\n      const speed = (length / time);\n      this.store.dispatch(addResult({ result: { speed: speed, text: `Speed is ${speed.toFixed(2)} symbols/min` } }));\n    })\n  ), { dispatch: false });\n}\n","import { createReducer, on } from \"@ngrx/store\";\nimport { addResult, incrementCurrentSymbolsCount, resetCurrentSymbolsCount, setStringLength } from \"./statistics.actions\";\nimport { initialState } from \"./statistics.state\";\n\nexport const statisticsReducer = createReducer(initialState,\n  on(setStringLength, (state, { length }) => ({ ...state, wordsLength: length })),\n  on(resetCurrentSymbolsCount, (state) => ({ ...state, currentSymbolsCount: 0 })),\n  on(incrementCurrentSymbolsCount, state => ({ ...state, currentSymbolsCount: state.currentSymbolsCount + 1 })),\n  on(addResult, (state, { result }) => ({ ...state, results: [...state.results, result] })),\n);\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\n\nexport interface Result {\n  speed: number,\n  text: string,\n}\nexport interface StatisticsState {\n  time: number;\n  wordsLength: number;\n  currentSymbolsCount: number;\n  results: Result[];\n}\n\nexport const initialState: StatisticsState = {\n  time: 0,\n  wordsLength: 0,\n  currentSymbolsCount: 0,\n  results: [],\n};\n\nexport const featureSelector = createFeatureSelector<StatisticsState>('statistics');\n\nexport const wordsLengthSelector = createSelector(featureSelector, state => state.wordsLength);\nexport const alreadyTypedSymbolsCountSelector = createSelector(featureSelector, state => state.currentSymbolsCount);\nexport const resultsSelector = createSelector(featureSelector, state => state.results);\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { KeyboardKey } from '../keyboard-monitor.component';\n\n@Component({\n  selector: 'app-key',\n  templateUrl: './key.component.html',\n  styleUrls: ['./key.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class KeyComponent {\n\n  @Input() key?: KeyboardKey;\n}\n","<div\n  class=\"key\"\n  [class.highlighted-key]=\"key?.isHighlighted\"\n  [class.typed-key]=\"key?.isTyped\"\n>{{key?.key}}</div>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { KeyboardState, keyRowsSelector } from 'src/app/store/keyboard/keyboard.state';\n\nexport type KeyboardKey = { key: string, isHighlighted?: boolean, isTyped?: boolean };\nexport type KeyboardRow = KeyboardKey[];\n@Component({\n  selector: 'app-keyboard-monitor',\n  templateUrl: './keyboard-monitor.component.html',\n  styleUrls: ['./keyboard-monitor.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class KeyboardMonitorComponent {\n  public keyRows$: Observable<KeyboardRow[]>;\n\n  constructor(private store: Store<KeyboardState>) {\n    this.keyRows$ = this.store.select(keyRowsSelector);\n  }\n}\n","<div\n  *ngFor=\"let keyRow of keyRows$ | async\"\n  class=\"key-row\"\n>\n  <app-key\n    *ngFor=\"let key of keyRow\"\n    [key]=\"key\"\n  ></app-key>\n</div>\n","import { Observable } from 'rxjs';\nimport { resultsSelector, Result } from './../../app/store/statistics/statistics.state';\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { StatisticsState } from 'src/app/store/statistics/statistics.state';\n\n@Component({\n  selector: 'app-results',\n  templateUrl: './results.component.html',\n  styleUrls: ['./results.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ResultsComponent implements OnInit {\n  results$?: Observable<Result[]>;\n\n  constructor(private store: Store<StatisticsState>) {}\n\n  ngOnInit(): void {\n    this.results$ = this.store.pipe(select(resultsSelector));\n  }\n}\n","<ng-container *ngFor=\"let result of results$ | async; let index = index\">\n  <div class=\"result\">\n    <mat-card class=\"result-card\">\n      <mat-card-header>\n        <mat-card-title>Result {{index + 1}}</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>{{result.text}}</mat-card-content>\n      </mat-card>\n\n      <mat-card class=\"result-card-under\">\n        <mat-card-header>\n          <mat-card-title\n            class=\"result-great\"\n            *ngIf=\"result.speed >= 150\"\n          >Nice job!</mat-card-title>\n          <mat-card-title\n            class=\"result-avg\"\n            *ngIf=\"result.speed > 80 && result.speed < 150\"\n          >Not great, not terrible</mat-card-title>\n          <mat-card-title\n            class=\"result-low\"\n            *ngIf=\"result.speed <= 80\"\n          >Practice practice practice</mat-card-title>\n        </mat-card-header>\n      </mat-card>\n  </div>\n\n</ng-container>\n","import { incrementCurrentSymbolsCount, resetCurrentSymbolsCount } from './../../app/store/statistics/statistics.actions';\nimport { Observable } from 'rxjs';\nimport { alreadyTypedSymbolsCountSelector, wordsLengthSelector } from './../../app/store/statistics/statistics.state';\nimport { ChangeDetectionStrategy, Component, HostListener, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport randomWords from 'random-words';\nimport { setKeyState, setTypedKeyState } from 'src/app/store/keyboard/keyboard.actions';\nimport { setStringLength, startTimer, stopTimer } from 'src/app/store/statistics/statistics.actions';\n\n@Component({\n  selector: 'app-ticker',\n  templateUrl: './ticker.component.html',\n  styleUrls: ['./ticker.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TickerComponent implements OnInit {\n  wordsCount = 5;\n  stringToType = '';\n  alreadyTypedString = '';\n  errorCharPosition = -1;\n  currentCursorPosition = 0;\n  isTickerHighlighted = false;\n  alreadyTypedSymbolsCount$?: Observable<number>;\n  allSymbolsCount$?: Observable<number>;\n\n  constructor(private store: Store) {}\n\n  @HostListener('document:keydown', ['$event'])\n  onKeyDownHandler(event: KeyboardEvent) {\n    if (this.currentCursorPosition >= this.stringToType.length) {\n      this.store.dispatch(stopTimer());\n      this.initValues();\n      this.highlightKey(this.stringToType.charAt(this.currentCursorPosition));\n    }\n    if (this.stringToType[this.currentCursorPosition] === event.key) {\n      this.unHighlightKey(this.stringToType.charAt(this.currentCursorPosition));\n      this.currentCursorPosition++;\n      this.alreadyTypedString = this.stringToType.slice(0, this.currentCursorPosition);\n      this.errorCharPosition = -1;\n      this.highlightKey(this.stringToType.charAt(this.currentCursorPosition));\n      this.pushKeyButton(event.key);\n      this.incrementAlreadyTypedSymbolsCount();\n    }\n    else {\n      this.pushKeyButton(event.key);\n      this.errorCharPosition = this.currentCursorPosition;\n    }\n\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  ngOnInit(): void {\n    this.generateWords();\n    this.resetStats();\n    this.highlightKey(this.stringToType.charAt(this.currentCursorPosition));\n    this.allSymbolsCount$ = this.store.pipe(select(wordsLengthSelector));\n    this.alreadyTypedSymbolsCount$ = this.store.pipe(select(alreadyTypedSymbolsCountSelector));\n  }\n\n  generateWords() {\n    this.stringToType = randomWords(this.wordsCount).join(' ');\n  }\n\n  highlightKey(key: string) {\n    this.store.dispatch(setKeyState({ pressedKey: { key, isHighlighted: true } }));\n  }\n\n  unHighlightKey(key: string) {\n    this.store.dispatch(setKeyState({ pressedKey: { key, isHighlighted: false } }));\n  }\n\n  pushKeyButton(key: string) {\n    this.store.dispatch(setTypedKeyState({ pressedKey: { key: key } }));\n  }\n\n  incrementAlreadyTypedSymbolsCount() {\n    this.store.dispatch(incrementCurrentSymbolsCount());\n  }\n\n  removeHighlightedClass() {\n    this.isTickerHighlighted = false;\n  }\n\n  resetStats() {\n    this.store.dispatch(setStringLength({ length: this.stringToType.length }));\n    this.store.dispatch(startTimer());\n    this.store.dispatch(resetCurrentSymbolsCount());\n  }\n\n  private initValues() {\n    this.generateWords();\n    this.resetStats();\n\n    this.alreadyTypedString = '';\n    this.errorCharPosition = -1;\n    this.currentCursorPosition = 0;\n\n    this.isTickerHighlighted = true;\n  }\n}\n","<div class=\"words-ticker-wrapper\">\n  <pre\n    class=\"words-ticker\"\n    [class.highlighted]=\"isTickerHighlighted\"\n    [innerHtml]=\"stringToType | highlighter:alreadyTypedString:errorCharPosition\"\n    (transitionend)=\"removeHighlightedClass()\"\n  ></pre>\n  <app-typing-progress-bar\n    class=\"progress-bar\"\n    [allSymbolsToTypeCount]=\"allSymbolsCount$ | async\"\n    [alreadyTypedSymbolsCount]=\"alreadyTypedSymbolsCount$ | async\"\n  ></app-typing-progress-bar>\n  </div>\n","import { Component, Input, ChangeDetectionStrategy, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-typing-progress-bar',\n  templateUrl: './typing-progress-bar.component.html',\n  styleUrls: ['./typing-progress-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TypingProgressBarComponent implements OnChanges {\n  @Input() allSymbolsToTypeCount: number | null = 0;\n  @Input() alreadyTypedSymbolsCount: number | null = 0;\n  progress = 0;\n\n  ngOnChanges(): void {\n    if (this.alreadyTypedSymbolsCount !== null && this.allSymbolsToTypeCount) {\n      console.log(`typed ${this.alreadyTypedSymbolsCount} all ${this.allSymbolsToTypeCount}`);\n      this.progress = (this.alreadyTypedSymbolsCount / this.allSymbolsToTypeCount) * 100;\n    }\n  }\n}\n","<mat-progress-bar\n  mode=\"determinate\"\n  value=\"{{progress}}\"\n></mat-progress-bar>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { ApplicationRef, enableProdMode } from '@angular/core';\nimport { enableDebugTools } from '@angular/platform-browser';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule).then(module => enableDebugTools(module.injector.get(ApplicationRef).components[0]))\n  .catch(err => console.error(err));\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'highlighter'\n})\nexport class HighlighterPipe implements PipeTransform {\n\n  transform(value: string, textToHighlight: string, errorTypedCharPosition: number): string {\n    if (!textToHighlight) return value;\n    return errorTypedCharPosition < 0 ?\n      value.replace(textToHighlight, '<span class=\"highlighted-text\">$&</span>') :\n      this.replaceAt(value, errorTypedCharPosition, `<span class=\"error-char\">${value.charAt(errorTypedCharPosition)}</span>`)\n        .replace(textToHighlight, '<span class=\"highlighted-text\">$&</span>');\n  }\n\n  replaceAt = function (value: string, index: number, replacement: string) {\n    return value.substring(0, index) + replacement + value.substring(index + 1, value.length);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}